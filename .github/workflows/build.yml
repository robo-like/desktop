name: Build Electron App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm install
    
    - name: Validate Apple Signing Prerequisites (macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        echo "Validating Apple signing prerequisites..."
        MISSING_SECRETS=0
        
        if [ -z "$APPLE_ID" ]; then
          echo "❌ APPLE_ID secret is missing"
          MISSING_SECRETS=1
        else
          echo "✅ APPLE_ID is available"
        fi
        
        if [ -z "$APPLE_PASSWORD" ]; then
          echo "❌ APPLE_PASSWORD secret is missing"
          MISSING_SECRETS=1
        else
          echo "✅ APPLE_PASSWORD is available"
        fi
        
        if [ -z "$APPLE_TEAM_ID" ]; then
          echo "❌ APPLE_TEAM_ID secret is missing"
          MISSING_SECRETS=1
        else
          echo "✅ APPLE_TEAM_ID is available"
        fi
        
        if [ -z "$APPLE_SIGN_IDENTITY" ]; then
          echo "❌ APPLE_SIGN_IDENTITY secret is missing"
          MISSING_SECRETS=1
        else
          echo "✅ APPLE_SIGN_IDENTITY is available"
        fi
        
        if [ -z "$APPLE_CERTIFICATE" ]; then
          echo "❌ APPLE_CERTIFICATE secret is missing"
          MISSING_SECRETS=1
        else
          echo "✅ APPLE_CERTIFICATE is available"
        fi
        
        if [ -z "$APPLE_CERTIFICATE_PASSWORD" ]; then
          echo "❌ APPLE_CERTIFICATE_PASSWORD secret is missing"
          MISSING_SECRETS=1
        else
          echo "✅ APPLE_CERTIFICATE_PASSWORD is available"
        fi
        
        if [ $MISSING_SECRETS -eq 1 ]; then
          echo ""
          echo "❌ Missing required Apple signing secrets. Build will proceed unsigned."
          echo "   To enable code signing, add all required secrets to GitHub repository settings."
          echo ""
        else
          echo ""
          echo "✅ All Apple signing prerequisites are available. Build will be signed."
          echo ""
        fi
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_SIGN_IDENTITY: ${{ secrets.APPLE_SIGN_IDENTITY }}
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
    
    - name: Setup Apple Certificate (macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        # Create keychain
        security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD || 'temp_password' }}" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD || 'temp_password' }}" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Import certificate if available
        if [ ! -z "${{ secrets.APPLE_CERTIFICATE }}" ]; then
          echo "Importing Apple certificate..."
          echo "${{ secrets.APPLE_CERTIFICATE }}" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.KEYCHAIN_PASSWORD || 'temp_password' }}" build.keychain
          echo "Certificate imported successfully"
        else
          echo "No APPLE_CERTIFICATE provided, skipping certificate setup"
        fi
    
    - name: Build Application
      run: npm run make
      env:
        CI: true
        BASE_URL: ${{ secrets.BASE_URL || 'https://www.robolike.com' }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_SIGN_IDENTITY: ${{ secrets.APPLE_SIGN_IDENTITY }}
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: out/make/**/*